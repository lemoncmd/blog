<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>だらだらと技術ブログ</title>
    <link>https://blog.anzu.tech/</link>
    <description>Recent content on だらだらと技術ブログ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Thu, 12 Dec 2019 14:18:20 +0900</lastBuildDate>
    
	<atom:link href="https://blog.anzu.tech/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>異世界の難解プログラミング言語「lex」の紹介</title>
      <link>https://blog.anzu.tech/post/lex/</link>
      <pubDate>Thu, 12 Dec 2019 14:18:20 +0900</pubDate>
      
      <guid>https://blog.anzu.tech/post/lex/</guid>
      <description>異世界とはなんぞや？ 「悠里」とは？ まず、 総合創作界隈『悠里』 について説明。
 「悠里(Jurli/Yuuri)」とは、人工言語ユーゴック語と、人工言語リパライン語を主軸として架空世界を展開していくものです。架空世界の持つ文化、風土、歴史、宗教、人種など、さまざまな観点から創作していく総合創作です。
(悠里概説 - 悠里総合サイトより引用)
 つまるところ、人工言語を中心に世界観を創作する界隈です。 ユーゴック語やリパライン語のほかにも、ざっくり十数言語以上は創作されています。
他にも、科学的なことから果てはボドゲまで作られてたり。
「FAFss」とは？ FAFss とは、悠里内の組織の一つで、主に計算機科学をやっていく集団。
様々なプログラミング言語やらアセンブリやらCPUやらが作られている。ヤバ。
架空世界の方にもFAFssという組織があり、そっちでは †革新的計算機† が作られたという設定。
なぜか筆者はFAFssとかいう頭おかしい集団にねじ込まれているので、ブログに頭おかしい成果を残そうと思いました。
「lex」とは？ 悠里の主要言語の一つであるリパライン語には、&amp;ldquo;lex&amp;rdquo; という頭おかしい単語があります。
リパライン語辞書にはこのように記載されています。
 【接続詞】【名詞】【前置詞】特別な三つの用法を持つ
[語法]
la lex
後置した文の前の文全体、一部を主語、目的語にする
eo lex
助動詞の意味を後に来る句の動詞に適用しない
lex V
動詞の連体形を作る。
 これを悪用活用しました。
異世界の難解プログラミング言語「lex」 「lex」概要 lex はスタック指向の難解プログラミング言語です。これは草稿段階なのでいろいろできないことあります。
lexは基本的には全てのデータがFILO(First-In Last-Out)のデータ構造であるスタックに保存されます。 そしてそのスタック上のデータをこねくり回していろいろします。
以下のプログラムは、lexで最も簡単なプログラムの一つです。
lex vintifarlirges la lex. このプログラムでは、自分自身を返すvintifarlirges(リパライン語で「自己同一化する」)という関数を定義しています。
プログラミング言語「lex」って何の略？ 「lex」とは、
lex es xlaisoss の略で、「『lex』は命令列」と、「～を行う命令列」という二つの意味があります。
関数定義 関数を定義するには、lex Vというキーワードを用います。以下のVには関数名を、続けてプログラムの内容を、最後にピリオドで区切ります。
lex V プログラム . 基本的にlexのプログラムは関数定義の集合で書かれます。
データ スタックにデータを積む方法は3種類あります。
 即値 スタックから取り出したデータを積む 関数を呼ぶ  基本的にはプログラムでは即値もしくはスタックから取り出したデータ(後述)を記述すると、そのままスタックに積むことができます。</description>
    </item>
    
    <item>
      <title>ブログ始めたよー</title>
      <link>https://blog.anzu.tech/post/test/</link>
      <pubDate>Mon, 09 Dec 2019 13:07:46 +0900</pubDate>
      
      <guid>https://blog.anzu.tech/post/test/</guid>
      <description>ブログを始めた 上着を着てもまだ肌寒く、木々はその葉を落とした。
街は師走。クリスマスも近づき浮かれている中。
そんな12月は、技術者にとってはアドベントカレンダーの季節。
布団の誘惑に負けず(ほんまか？)、出席した大学の講義中にササっとブログを作りました。
三日坊主で終わりそうな気もしないでもないけど、少なくともカレンダーに登録した分はこのブログに記そうと思う。
カスタムドメイン x GitHub pages x hugo 10月下旬、突然カスタムドメインが欲しくなり、そそくさと anzu.tech を購入した。
特に理由しかないが、ドメインを取るならば anzu か lemon がいいなーと思ってた。
ちょうど新しめなトップレベルドメインである .tech がお名前ドットコムで空いてたので即購入。
そのまま一か月以上放置。
そのままだといけないと思い、アドベントカレンダーの季節になったので、ブログを作るべくQiitaをあさった。
参考にしたのはここ。Hugo + GitHub Pages でブログのプロトタイプを構築してみた。
私はwslのUbuntuを用いているので、brewではなくaptでインストール。
&amp;hellip;と思ったらテーマを入れたらhugoがエラーを吐く。 どうやらUbuntu16.04のパッケージに入っているhugoはバージョンがv0.16とかで(現在はv0.60)すごく古いので、GitHubのhugoの最新リリースからdebをダウンロードしてきてインストール。
使用しているテーマはm10cという物。友人にこれがいいんじゃないって言われて入れた。自分で決めるのはめんどいので。 そしてGitHubにアップロードし終わったら、githubのリポジトリのSettings＞Optionsから、GitHub PagesのSourceを設定。
さて、ここからはカスタムドメインを設定していくが、お名前ドットコムのドメイン設定からDNSレコードを設定する。
URLは blog.anzu.tech にし、レコードの種類をCNAME、元ドメインを lemoncmd.github.io にする。
ここですぐにGitHubに設定してもhttpsにならないので、設定がなじむまで 一日ゆっくりと待つ。 なんか一時間もかからなかった。一回テストでやったときは丸一日かかったんだけどなぁ。ともかくよし。
最後にGitHub Pagesの設定からCustom domainを設定して終了。 お疲れ様、私。
ブログの用途 さて、これからの予定は、このエントリを母校OBアドベントカレンダーに登録。
次に、悠里(言語系創作サークル)のアドベントカレンダーに創作難解プログラミング言語の草稿みたいなのを登録。
最後に、OUCC(大学のコンピューターサークル)のアドベントカレンダーに今作っているコンパイラに関するエントリでも。
それ以降の用途は&amp;hellip;し～らない！</description>
    </item>
    
  </channel>
</rss>